kube-prometheus-stack:
  defaultRules:
    disabled:
      NodeMemoryMajorPagesFaults: true
    rules:
      # Disable KubeSchedulerDown, KubeProxyDown, KubeControllerManagerDown
      # because running in k3s
      kubeControllerManager: false
      kubeProxy: false
      kubeSchedulerAlerting: false
  kubeProxy:
    enabled: false
  kubeControllerManager:
    enabled: false

  alertmanager:
    config:
      receivers:
        - name: "null"
        - name: default
          telegram_configs:
            - bot_token_file: /etc/alertmanager/secrets/telegram-bot-token/token.txt
              chat_id: -1001375636328
              parse_mode: MarkdownV2
              message: '{{ template "telegram.default.message" . }}'
      route:
        receiver: default
    alertmanagerSpec:
      # Secrets is a list of Secrets in the same namespace as the Alertmanager object, which shall be mounted into the
      # Alertmanager Pods. The Secrets are mounted into /etc/alertmanager/secrets/.
      #
      secrets:
        - telegram-bot-token

    templateFiles:
      telegram.tmpl: |-
        {{ define "telegram.default.message" }}
        {{- if eq .Status "firing" -}}
            {{- if eq .CommonLabels.severity "critical" -}}
                üî¥ Alert: {{ .CommonLabels.alertname }}
            {{- else if eq .CommonLabels.severity "warning" -}}
                üü† Alert: {{ .CommonLabels.alertname }}
            {{- else -}}
                ‚ö™Ô∏è Alert: {{ .CommonLabels.alertname }}
            {{- end }}
        Status: üî• FIRING
        Severity: {{ if eq .CommonLabels.severity "critical" }}üî¥ {{ .CommonLabels.severity | title }}{{ else if eq .CommonLabels.severity "warning" }}üü† {{ .CommonLabels.severity | title }}{{ else }}‚ö™Ô∏è {{ .CommonLabels.severity | title }}{{ end }}
        {{- else if eq .Status "resolved" -}}
            ‚ö™Ô∏è Alert: {{ .CommonLabels.alertname }}
        Status: ‚úÖ RESOLVED
        Severity: {{ if eq .CommonLabels.severity "critical" }}üü¢ {{ .CommonLabels.severity | title }}{{ else if eq .CommonLabels.severity "warning" }}üü¢ {{ .CommonLabels.severity | title }}{{ else }}‚ö™Ô∏è {{ .CommonLabels.severity | title }}{{ end }}
        {{- end }}

        {{- range .Alerts -}}

        {{- if .Labels.app_name }}
        App: `{{ .Labels.app_name }}`
        {{- end }}

        {{- if .Labels.job }}
        Job: `{{ .Labels.job }}`
        {{- end }}

        {{- if .Labels.namespace }}
        Namespace: `{{ .Labels.namespace }}`
        {{- end }}

        {{- if .Labels.instance }}
        Instance: `{{ .Labels.instance }}`
        {{- end }}

        {{- if .Annotations.runbook_url }}
        [RunbookURL]({{ .Annotations.runbook_url }})

        {{- if .Labels.summary }}
        Summary: `{{ .Annotations.summary }}`
        {{- end }}

        {{- if .Annotations.description }}
        Description: `{{ .Annotations.description }}`
        {{- end }}

        {{- end }}
        {{- end }}
        {{ end }}

    ingress:
      enabled: true
      ingressClassName: nginx
      hosts:
        - alertmanager.k8s.javydekoning.com
      paths:
        - /
      tls:
        - hosts:
            - alertmanager.k8s.javydekoning.com
          secretName: javydekoning-com-tls

  grafana:
    ingress:
      enabled: true
      ingressClassName: nginx
      hosts:
        - grafana.k8s.javydekoning.com
      paths:
        - /
      tls:
        - hosts:
            - grafana.k8s.javydekoning.com
          secretName: javydekoning-com-tls

    additionalDataSources:
      - name: Loki
        type: loki
        access: proxy
        url: "http://loki:3100"
        isDefault: false
        editable: true

  prometheus:
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: false
    ingress:
      enabled: true
      ingressClassName: nginx
      hosts:
        - prometheus.k8s.javydekoning.com
      paths:
        - /
      tls:
        - hosts:
            - prometheus.k8s.javydekoning.com
          secretName: javydekoning-com-tls

  prometheusOperator:
    admissionWebhooks:
      enabled: false
    tls:
      enabled: false

  prometheus-node-exporter:
    hostRootFsMount:
      enabled: false
