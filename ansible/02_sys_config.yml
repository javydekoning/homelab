---
- name: 02-PREP_isContainerTest
  shell: |-
    if [ -n "$DOCKER_CONTAINER" ] || [ -f "/.dockerenv" ]; then
        echo "Running inside a container."
    else
        echo "Not running inside a container."
    fi
  register: container_check_result

- name: 02-PREP_mkdir_/etc/default
  ansible.builtin.file:
    path: /etc/default
    state: directory
    mode: "0755"

- name: 02-PREP_touch_/etc/login.defs
  ansible.builtin.file:
    path: /etc/login.defs
    state: touch
    access_time: preserve
    modification_time: preserve

- name: 02-PREP_touch_/etc/default/useradd
  ansible.builtin.file:
    path: /etc/default/useradd
    state: touch
    access_time: preserve
    modification_time: preserve

- name: 02-PREP_set_net.ipv4.ip_forward=1
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: yes
    sysctl_set: true

- name: 02-PREP_set_fs.inotify.max_user_watches=655360
  when: container_check_result.stdout_lines[0] == "Not running inside a container"
  sysctl:
    name: fs.inotify.max_user_watches
    value: "655360"
    state: present
    reload: yes
    sysctl_set: true

- name: 02-PREP_set_fs.inotify.max_user_instances=1280
  when: container_check_result.stdout_lines[0] == "Not running inside a container"
  sysctl:
    name: fs.inotify.max_user_instances
    value: "1280"
    state: present
    reload: yes
    sysctl_set: true

- name: O2-CRON_daily_rmi_prune
  ansible.builtin.cron:
    name: "prune"
    minute: "0"
    hour: "2"
    job: "k3s crictl rmi --prune"

- name: O2-CRON_daily_apk_updates
  ansible.builtin.cron:
    name: "updates"
    minute: "0"
    hour: "3"
    job: "apk update && apk upgrade && rm -rf /var/cache/apk/*"
