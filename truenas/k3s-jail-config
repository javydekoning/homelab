startup=1
gpu_passthrough_intel=1
gpu_passthrough_nvidia=0
# Turning off seccomp filtering improves performance at the expense of security
seccomp=0

systemd_nspawn_user_args=--network-macvlan=enp3s0
  --resolv-conf=bind-host
  --system-call-filter='add_key keyctl bpf perf_event_open'
  --capability=all
  --bind=/dev/kmsg
  --bind=/dev/fuse
  --bind='/mnt/main/downloads/:/downloads'
  --bind='/mnt/nvme/config/:/config'
  --bind=/dev/ttyUSB0

# Specify command/script to run on the HOST before starting the jail
pre_start_hook=#!/usr/bin/bash
  set -euo pipefail
  echo 'PRE_START_HOOK_EXAMPLE'
  echo 1 > /proc/sys/net/ipv4/ip_forward
  modprobe br_netfilter
  modprobe overlay
  modprobe iptable_nat
  modprobe iptable_filter
  echo 1 > /proc/sys/net/bridge/bridge-nf-call-ip6tables
  echo 1 > /proc/sys/net/bridge/bridge-nf-call-iptables
  echo 1 > /proc/sys/vm/overcommit_memory
  echo 1280 > /proc/sys/fs/inotify/max_user_instances
  echo 196608 > /proc/sys/net/netfilter/nf_conntrack_max
  echo 655360 > /proc/sys/fs/inotify/max_user_watches
she
# Only used while creating the jail
distro=debian
release=trixie

# Specify command/script to run IN THE JAIL on the first start (once networking is ready in the jail)
# Useful to install packages on top of the base rootfs
initial_setup=#!/usr/bin/bash
  set -euo pipefail
  apt-get -y install curl jq git kubectx kustomize

  # Enable HW Acceleration
  apt-get -y install {va-driver-all,ocl-icd-libopencl1,vainfo,intel-gpu-tools}

  # Setup Kubernetes
  curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  curl -sfL https://get.k3s.io | \
  INSTALL_K3S_CHANNEL=latest sh -s - server --cluster-init \
  --disable=servicelb,traefik \
  --kubelet-arg="allowed-unsafe-sysctls=net.ipv4.conf.*" \
  --default-local-storage-path=/config/k8s-volumes-nvme

  # Clone homelab repo
  git clone https://github.com/javydekoning/homelab.git ~/homelab

  # Install dotfiles, zsh, oh-my-zsh, powerlevel10k
  cd ~/homelab/dotfiles
  bash install.sh

  # Install kubecolor
  cd ~/homelab/dotfiles
  bash install_kubecolor.sh

  # Bootstrap Argo CD
  cd ~/homelab/k8s/cluster-critical/argo-cd
  kubectl create ns argocd
  kustomize build --enable-helm . | kubectl apply -f -

  # Launch cluster critical resources
  printf "%s" "Enter ACCESS_KEY: "
  read ACCESS_KEY

  printf "%s" "Enter SECRET_KEY: "
  read SECRET_KEY

  kubectl create ns external-secrets
  kubectl create secret generic awssm-secret -n external-secrets \
    --from-literal=access-key=$ACCESS_KEY --from-literal=secret-access-key=$SECRET_KEY

  # Label kube-system namespace for privileged containers for CSI drivers
  kubectl label namespace kube-system \
    pod-security.kubernetes.io/enforce=privileged \
    pod-security.kubernetes.io/audit=privileged \
    pod-security.kubernetes.io/warn=privileged \
    --overwrite

  kubectl apply -f ~/homelab/k8s/argo-application-sets/kustomize-application-set.yaml

  # symlink /etc/rancher/k3s/k3s.yaml -> /root/.kube/config
  mkdir -p /root/.kube
  ln -sf /etc/rancher/k3s/k3s.yaml /root/.kube/config

  # Run Ansible again
  cd ~/homelab/dotfiles
  ./install.sh

# Usually no need to change systemd_run_default_args
systemd_run_default_args=--collect
  --property=Delegate=yes
  --property=RestartForceExitStatus=133
  --property=SuccessExitStatus=133
  --property=TasksMax=infinity
  --property=Type=notify
  --setenv=SYSTEMD_NSPAWN_LOCK=0
  --property=KillMode=mixed

# Usually no need to change systemd_nspawn_default_args
systemd_nspawn_default_args=--bind-ro=/sys/module
  --boot
  --inaccessible=/sys/module/apparmor
  --quiet
  --keep-unit
